---
import "../styles/components/cleaningProducts.sass";
import InputField from "./inputForm.astro";
import { getLangFromUrl, useTranslations } from "../i18n/utils";
import { products } from "../data/products";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

console.log(products, "Products");
---

<form class="cleaning-list wide-width" id="cleaning-form">
  <h2>{t("productList.whatWeHaveStorage")}</h2>

  {
    products.map((p) => (
      <InputField
        id={p.id}
        name={p.id[lang]}
        label={p.label[lang]}
        forOnLabel={p.forOnLabel[lang]}
        placeholderName={p.placeholderName[lang]}
      />
    ))
  }

  <div class="form-footer">
    <button type="submit">Speichern</button>
  </div>
</form>

<style lang="sass">
  /* Spinner inside button */
  button.loading
    position: relative
    color: transparent
    pointer-events: none

  button.loading::after
    content: ""
    position: absolute
    top: 50%
    left: 50%
    transform: translate(-50%, -50%)
    width: 20px
    height: 20px
    border: 2px solid #fff
    border-top-color: transparent
    border-radius: 50%
    animation: spin 1s linear infinite

  @keyframes spin
    from
      transform: translate(-50%, -50%) rotate(0deg)
    to
      transform: translate(-50%, -50%) rotate(360deg)
</style>

<script>
  const form = document.getElementById("cleaning-form") as HTMLFormElement;
  const submitButton = form.querySelector(
    'button[type="submit"]'
  ) as HTMLButtonElement;
  const params = new URLSearchParams(window.location.search);
  const kita = params.get("kita");

  if (form) {
    form.addEventListener("submit", async (e) => {
      e.preventDefault();

      if (submitButton) {
        submitButton.disabled = true;
        submitButton.classList.add("loading"); // add spinner
      }

      const formData = new FormData(form);
      const data: Record<string, any> = {};
      formData.forEach((value, key) => (data[key] = value));
      data.kita = kita;

      console.log("Collected data:", data);

      try {
        const response = await fetch("/.netlify/functions/sendToSheets", {
          method: "POST",
          body: JSON.stringify(data),
          headers: { "Content-Type": "application/json" }
        });

        const result = await response.json();

        if (result.success) {
          const encodedKita = encodeURIComponent(kita || "");
          window.location.href = `/success?kita=${encodedKita}`;
        }

        console.log("Google Sheets response:", result);
      } catch (err) {
        console.error("Error sending data to Sheets:", err);
        if (submitButton) {
          submitButton.disabled = false;
          submitButton.classList.remove("loading");
        }
      }
    });
  }
</script>
